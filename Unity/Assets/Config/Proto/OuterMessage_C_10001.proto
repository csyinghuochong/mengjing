syntax = "proto3";
package ET;

message HttpGetRouterResponse
{
	repeated string Realms = 1;
	repeated string Routers = 2;
}

message RouterSync
{
	uint32 ConnectId = 1;
	string Address = 2;
}

//ResponseType M2C_TestResponse
message C2M_TestRequest // ILocationRequest
{
	int32 RpcId = 1;
	string request = 2;
}

message M2C_TestResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string response = 4;
}

//ResponseType G2C_EnterMap
message C2G_EnterMap // ISessionRequest
{
	int32 RpcId = 1;
	int64 UnitId = 2;
	int64 AccountId = 3;
}

message G2C_EnterMap // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	// 自己unitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated Unity.Mathematics.float3 Points = 1;
	Unity.Mathematics.quaternion Rotation = 2;
	int32 TurnSpeed = 3;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
	map<int32, int64> KV = 6;
	MoveInfo MoveInfo = 7;
}

message M2C_CreateUnits // IMessage
{
	repeated UnitInfo Units = 1;
}

message M2C_CreateMyUnit // IMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;	
}

message M2C_RemoveUnits // IMessage
{
	repeated int64 Units = 1;
}

message C2M_PathfindingResult // ILocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 Position = 2;
}

message C2M_Stop // ILocationMessage
{
	int32 RpcId = 1;
}

message M2C_PathfindingResult // IMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	repeated Unity.Mathematics.float3 Points = 3;
}

message M2C_Stop // IMessage
{
	int32 Error = 1;
	int64 Id = 2;
	Unity.Mathematics.float3 Position = 3;
	Unity.Mathematics.quaternion Rotation = 4;
}

//ResponseType G2C_Ping
message C2G_Ping // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Ping // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Time = 4;
}


message G2C_Test // ISessionMessage
{
}

//ResponseType M2C_Reload
message C2M_Reload // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Password = 3;
}

message M2C_Reload // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType R2C_Login
message C2R_Login // ISessionRequest
{
	int32 RpcId = 1;
	string  Account = 2;  // 帐号
	string  Password = 3;  // 密码
	string  Token = 3;  
	string  ThirdLogin = 3;  
	bool Relink = 5;
	int32 age_type = 6;
}

message RechargeInfo
{
	int32 Amount = 1;
	int64 Time = 2;
	int64 UnitId = 3;
	string OrderInfo = 4;
}

message KeyValuePair
{
	int32 KeyId = 1;
	string Value = 2;
	string Value2 = 3;
}


message KeyValuePairInt
{
	int32 KeyId = 1;	
	int64 Value = 2;
}

message KeyValuePairLong
{
	int64 KeyId = 1;	
	int64 Value = 2;
	int64 Value2 = 3;
}

message PlayerInfo
{
	int32 RealName = 1;
	string Name = 2;
	string IdCardNo = 3;
	int32 RealNameReward = 4;
	repeated RechargeInfo RechargeInfos = 5;
	repeated KeyValuePair DeleteUserList = 6;
	repeated int32 BuChangZone = 7;
	string PhoneNumber = 8;
	repeated int64 ShareTimes = 9;
}

message CreateRoleInfo
{
	int64 UnitId = 1;
	int32 PlayerLv = 2;
	int32 PlayerOcc = 3;
	int32 WeaponId = 4;
	string PlayerName = 5;
	int32 OccTwo = 6;
	int32 EquipIndex = 7;
	int32 RobotId = 8;
}

message R2C_Login // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
	string Token = 7;
	int64 AccountId = 8;
	int32 QueueNumber = 9;
	string QueueAddres = 10;
	PlayerInfo PlayerInfo = 11;
	repeated CreateRoleInfo RoleLists = 12;
}

//ResponseType G2C_LoginGate
message C2G_LoginGate // ISessionRequest
{
	int32 RpcId = 1;
	int64 Key = 2;  // 帐号
	int64 GateId = 3;
}

message G2C_LoginGate // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
}

message ServerItem
{
	int32 ServerId = 1;
	string ServerIp = 2;
	string ServerName = 3;
	int64 ServerOpenTime = 4;
	int32 Show = 5;
	int32 New = 6;
	repeated int32 PlatformList = 7;   //不配置或者-1全部显示
}

//ResponseType A2C_CreateRoleData
message C2A_CreateRoleData // ISessionRequest
{
	int32 RpcId = 90;
	int32 CreateOcc = 2;
	string CreateName = 3;
	int64 AccountId = 4;
}

message A2C_CreateRoleData // ISessionResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	CreateRoleInfo createRoleInfo = 1;
}

message G2C_TestHotfixMessage // ISessionMessage
{
	string Info = 1;
}

//ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // ILocationRequest
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 N = 4;
}

message C2M_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

//ResponseType M2C_TransferMap
message C2M_TransferMap // ILocationRequest
{
	int32 RpcId = 1;

	int32 SceneId = 2;
	int32 SceneType = 3;
	int32 Difficulty = 5;
	string paramInfo = 6;
}

message M2C_TransferMap // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_Benchmark
message C2G_Benchmark // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Benchmark // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message HideProList
{
	int32 HideID = 1;
	int64 HideValue = 2;
}

message BagInfo
{
	int32 RpcId = 90;
	string Name = 91;
	int64 BagInfoID = 1;
	int32 ItemID = 2;
	int32 ItemNum = 3;
	string ItemPar = 4;
	int32 HideID = 5;
	string GemHole = 6;	//对应的孔位颜色
	int32 Loc = 8; //0背包 1装备
	bool IfJianDing = 9;
	repeated HideProList HideProLists = 10;					//鉴定属性
	repeated HideProList XiLianHideProLists = 11;           //洗练属性
	repeated int32 HideSkillLists = 12;
	bool isBinging = 13;
	repeated HideProList XiLianHideTeShuProLists = 14;		//洗练特殊属性
	string GetWay = 16; //来源方式
	string GemIDNew = 17;	//对应的宝石ID
	string MakePlayer = 18;					//制作玩家名字
	repeated HideProList FumoProLists = 20; //附魔属性
	int32 InheritTimes = 21;
	repeated int32 InheritSkills = 22;
	bool IsProtect = 23;						///装备锁 宠物锁 功能 npc打开
	repeated HideProList IncreaseProLists = 24; // 增幅属性
	repeated int32 IncreaseSkillLists = 25; // 增幅技能
	int32 EquipPlan = 26;
	int32 EquipIndex = 27; 
	int32 FuLing = 28;    //0未附灵 1附灵
}

message MysteryItemInfo
{
	int32 MysteryId = 1;
	int32 ItemID = 3;
	int32 ItemNumber = 4; 
	int32 ProductId = 5;
}

//战区领取记录
message ZhanQuReceiveNumber
{
	int32 ActivityId = 1;
	int32 ReceiveNum = 2;
	repeated int64 ReceiveUnitIds = 3; 
}

message FirstWinInfo
{
	int64 UserId = 1;
	int32 FirstWinId = 2;
	string PlayerName = 3;
	int64 KillTime = 4;
	int32 Difficulty = 5;
}

message PetMingPlayerInfo
{
	int32 MineType = 1;		
	int32 Postion = 2;
	int64 UnitId = 3;
	string PlayerName = 4;
	repeated int32 PetConfig = 5;
	repeated int64 PetIdList = 6;
	int32 TeamId = 7;
	int64 OccupyTime = 8;
}

message ChatInfo
{
	int64 UserId = 1;
	string ChatMsg = 3;
	string PlayerName = 4;
	int32 ChannelId = 2;
	int64 ParamId = 5;
	int64 Time = 6;
	int32 Occ = 7;
	int32 PlayerLevel = 8;
}

message MailInfo
{
	int32 Status = 1;	//新增 更新 删除
	string Context = 3;
	int64 MailId = 5;
	string Title = 6;
	repeated BagInfo ItemList = 7;	
	BagInfo ItemSell = 8;
	int64  BuyPlayerId = 9;
}

message PaiMaiItemInfo
{
	int64 Id = 1;
	int64 UserId = 2;
	BagInfo BagInfo = 3;			
	int32 Price = 5;
	string PlayerName = 6;
	int64 SellTime = 7;
}

message PaiMaiShopItemInfo
{
	int64 Id = 1;
	int32 ItemNumber = 2; 
	int32 PriceType = 3;
	int32 Price = 4;
	float PricePro = 5;
	int32 BuyNum = 6;
}

message PopularizeInfo
{
	int64 UnitId = 1;
	string Nmae = 2;
	int32 Level = 3;
	repeated int32 Rewards = 4;
	int32 Occ = 5;
	int32 OccTwo = 6;
}

message RankingInfo
{
	int64 UserId = 1;
	string PlayerName = 2;
	int32 PlayerLv = 3;
	int64 Combat  = 4;
	int32 Occ = 5;
}

message RankShouLieInfo
{
	int64 UnitID = 1;
	string PlayerName = 2;
	int64 KillNumber = 3;     //狩猎数量
	int32 Occ = 4;				//显示头像
}

message RankPetInfo
{
	int64 UserId = 1;
	string PlayerName = 2;
	string TeamName = 3;
	int32 RankId  = 4;
	repeated int32 PetConfigId = 5;
	repeated int64 PetUId = 6;
}

message ServerInfo
{
	int32 WorldLv = 1;
	int64 ExChangeGold = 2;
	RankingInfo RankingInfo = 4;
	int32 TianQi = 5;
	bool ShouLieOpen = 6;
	int32 ChouKaDropId = 7;   //每天随机
}

message ServerMailItem
{
	int32 MailType = 1;		 //1全服邮件     2充值邮件   3等级邮件   4开启格子   5充值区间
	string ParasmNew = 2;		//(Title == mailInfo[5])//0  充值金额    等级   开启第二个仓库并且格子没有开完的 
	repeated BagInfo ItemList = 3;
	int64  EndTime = 4;
	int32 ServerMailIId = 5;
	int32 Parasm = 6;   //(作废)
}

message UnionInfo
{
	string UnionName = 1;
	int64 LeaderId = 2;
	string LeaderName = 3;
	int32 LevelLimit = 4;
	string UnionPurpose = 5;
	repeated int64 ApplyList = 6;
	int64 UnionId = 7;
	int32 Level = 8;
	int32 Exp = 9;
	repeated UnionPlayerInfo UnionPlayerList = 10;
	repeated DonationRecord DonationRecords = 11;
	repeated int64 JingXuanList = 12;
	int64 JingXuanEndTime = 13;
	repeated int32 UnionKeJiList = 14;
	int32 KeJiActitePos = 15;			//当前升级的科技， 当前只能升级一个
	int64 KeJiActiteTime = 16;			//当前升级时间
	int64 UnionGold = 17;               //家族金币
	repeated string ActiveRecord = 18;	//记录 $"{playerName}_{getWay}_{dataType}_{dataValue}
}


message UnionPlayerInfo
{
	string PlayerName = 1;
	int32 PlayerLevel = 2;
	int32 Position = 3;    ///1族长 2副族长  ///3长老  ///族长认命副族长 副族长可以认命长老 长老和副族长也可以包名家族战
	int64 UserID = 4;
	int32 Combat = 5;
	int32 Occ = 6;
	int32 OccTwo = 7;
}

message DonationRecord
{
	int64 UnitId = 1;
	int64 Time = 2;
	int Gold = 3;
	string Name = 4;
	int32 Occ = 5;
	int Diamond = 6;
}

message A2C_Disconnect	//IMessage
{
	int32 Error = 1;
}

//等级 经验 货币 或者不变的数值都放在这。 
message UserInfo
{
    int64 AccInfoID = 1;
    string Name = 2;
    int64 Gold  = 3;
    //钻石
    int64 Diamond = 4;

    // 等级
    int32 Lv = 5;
    // 经验
    int64 Exp = 6;
    // 疲劳
    int64 PiLao = 7;
    //职业
    int32 Occ = 8;

    //职业
    int32 OccTwo = 9;

    int32 Combat = 10;

    int32 RobotId = 11;

    int32 Sp = 13;

    int32 Vitality = 14;	//活力

    int64 RongYu = 16;

    string UnionName = 17;

    int64 UserId = 18;

    repeated KeyValuePair GameSettingInfos = 19;

	repeated int32 MakeList = 20;

	repeated int32 CompleteGuideIds = 21;

	repeated KeyValuePairInt DayFubenTimes = 22;

	repeated KeyValuePair MonsterRevives = 23;

	repeated int32 TowerRewardIds = 24;

	repeated int32 ChouKaRewardIds = 25;

	repeated int32 XiuLianRewardIds = 26;

	//购买过的神秘商品
	repeated KeyValuePairInt  MysteryItems = 27;
	
	//已开启的宝箱记录
	repeated KeyValuePair  OpenChestList = 28;

	repeated KeyValuePairInt  MakeIdList = 29;

	//已通关的副本列表
    repeated FubenPassInfo FubenPassList = 30;

	//每日道具使用限制
	repeated KeyValuePairInt DayItemUse = 31;

	repeated int32 HorseIds = 32;

	//剧情副本每日刷新 global79
	repeated KeyValuePairInt DayMonsters = 33;

	//随机精灵每日刷新 global80
	repeated int32 DayJingLing = 34;

	int64 JiaYuanFund = 35;
	int64 JiaYuanExp = 36;
	int32 JiaYuanLv = 37;

	int32 BaoShiDu = 38;

	repeated KeyValuePair FirstWinSelf = 39;

	int64 UnionZiJin = 40;

	int32 ServerMailIdCur = 41;     //已领取的全服邮件

	repeated int32 DiamondGetWay = 42;

	string DemonName = 43;

	repeated int32 PetMingRewards = 44;   //ini long都放在数值组件

	repeated int32 OpenJingHeIds = 45;

	int32 SeasonLevel = 46;		 //赛季等级
	int32 SeasonExp = 47;		  //赛季经验
	int64 SeasonCoin = 48;			//赛季币

	repeated int32 WelfareTaskRewards = 49;

	int64 CreateTime = 50;

	repeated int32  WelfareInvestList = 51; //投资

	repeated int32 RechargeReward = 52;

	repeated int32 UnionKeJiList = 53;  //当前的能力id,客户端根据这个显示即可

	repeated int32 PetExploreRewardIds = 54;

	repeated int32 PetHeXinExploreRewardIds = 55;

	string StallName = 56;

	repeated int32 SingleRechargeIds = 57;

	repeated int32 SingleRewardIds = 58;

	repeated int32 ItemXiLianNumRewardIds = 59;

	repeated int32 DefeatedBossIds = 60;
	
	repeated  KeyValuePairInt BuyStoreItems = 61;
}

message M2C_RoleDataUpdate // IMessage
{
	int32 UpdateType = 1;				//UserDataType
	string UpdateTypeValue = 2;			
	int64 UpdateValueLong = 3;			
}

message M2C_RoleDataBroadcast // IMessage
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 UpdateType = 1;				//UserDataType
	string UpdateTypeValue = 2;			
	int64 UnitId = 3;
}

//技能列表
message SkillPro
{
    int32 SkillID = 1;
    int32 SkillPosition = 2;
    int32 SkillSetType = 3;	//1技能 2道具 
    int32 Actived = 4;  //0 未学习  1已学习
    int32 SkillSource = 5; //1职业技能 2装备技能 3天赋技能 4 精灵技能 5 套装技能
}

//通过奖励
message RewardItem
{
	int32 ItemID = 1;
	int32 ItemNum = 2;
}

message FubenPassInfo
{
	int32 FubenId = 1;
	int32 Difficulty = 2;			//1 difficulty普通 2 挑战  3困难
}


//ResponseType A2C_DeleteRoleData
message C2A_DeleteRoleData // ISessionRequest
{
	int32 RpcId = 90;
	int64 AccountId = 1;
	int64 UserId = 2;
}

message A2C_DeleteRoleData // ISessionResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message C2M_GMCommand // ILocationMessage
{
	int32 RpcId = 1;
	string GMMsg = 2;
	string Account = 3;
}

//ResponseType A2C_ActivityInfoResponse
message C2A_ActivityInfoRequest // IActivityActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 ActivityType = 1;
}

message A2C_ActivityInfoResponse // IActivityActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string ActivityContent = 1;
}

//ResponseType A2C_FirstWinInfoResponse
message C2A_FirstWinInfoRequest // IActivityActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message A2C_FirstWinInfoResponse // IActivityActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated FirstWinInfo FirstWinInfos = 1;
}

//ResponseType A2C_MysteryListResponse
message C2A_MysteryListRequest // IActivityActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UserId = 1;
}

message A2C_MysteryListResponse // IActivityActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated MysteryItemInfo MysteryItemInfos = 1;
}

//ResponseType A2C_PetMingChanChuResponse
message C2A_PetMingChanChuRequest // IActivityActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message A2C_PetMingChanChuResponse // IActivityActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType A2C_PetMingListResponse
message C2A_PetMingListRequest // IActivityActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message A2C_PetMingListResponse // IActivityActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 ChanChu = 1;
	repeated KeyValuePairInt PetMineExtend = 2;
	repeated PetMingPlayerInfo PetMingPlayerInfos = 4;
}

message RolePetInfo
{
	int64 Id = 1;
	int32 PetStatus = 2;   ///0休息 1出战 2散步 3仓库
	int32 ConfigId = 3;
	int32 PetLv = 4;
	int32 Star = 5;
	int32 PetExp = 7;
	string PetName = 8;
	bool IfBaby = 9;
	int32 AddPropretyNum = 10;
	string AddPropretyValue = 11;
	int32 PetPingFen = 12;
	int32 ZiZhi_Hp = 13;
	int32 ZiZhi_Act = 14;
	int32 ZiZhi_MageAct = 15;
	int32 ZiZhi_Def = 16;
	int32 ZiZhi_Adf = 17;
	int32 ZiZhi_ActSpeed = 18;
	float ZiZhi_ChengZhang = 19;
	repeated int32 PetSkill = 20;
	int32 EquipID_1 = 21;
	string EquipIDHide_1 = 22;
	int32 EquipID_2 = 23;
	string EquipIDHide_2 = 24;
	int32 EquipID_3 = 25;
	string EquipIDHide_3 = 26;
	repeated int32 Ks = 30;
	repeated int64 Vs = 31;
	int32 RoleCamp = 32;
	string PlayerName = 33;
	int32 SkinId = 34;
	repeated int64 PetHeXinList = 35;
	int32 UpStageStatus = 38;			//0 未进化  1 可进化  2 已进化
	int32 ShouHuPos = 39;				//0-3
	bool IsProtect = 40;					///装备锁 宠物锁 功能 npc打开
	repeated int64 PetEquipList = 41;	//宠物装备
	repeated int32 LockSkill = 42;      //只能锁定一个技能
	int32 Luckly = 43;
}

message PetFubenInfo
{
	int32 PetFubenId = 1;
	int32 Star = 2;
	int32 Reward = 3;
}

message PetMingRecord
{
	int64 UnitID = 1;
	int64 Time = 2;
	int32 MineType = 3;
	int32 Position = 4;
	string WinPlayer = 5;
}

//宠物更新
message M2C_RolePetBagUpdate // IMessage
{
	repeated RolePetInfo RolePetBag = 1;
	int32 UpdateMode = 2;  //1新增  2删除
}

//宠物更新
message M2C_PetListMessage	// IMessage
{
	repeated RolePetInfo PetList = 1;
	int64 RemovePetId = 2;
}

//宠物更新
message M2C_RolePetUpdate // IMessage
{
	repeated RolePetInfo PetInfoAdd = 1;
	repeated RolePetInfo PetInfoUpdate = 2;
	repeated RolePetInfo PetInfoDelete = 3;
	int32 GetWay = 4;  //1新增 2从背包取出
}

message M2C_PetDataUpdate // IMessage
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 PetId = 1;
	int32 UpdateType = 2;				//1表示名称  2表示经验 3表示等级 4表示金币
	string UpdateTypeValue = 3;
}

message M2C_PetDataBroadcast // IMessage
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 PetId = 1;
	int32 UpdateType = 2;				//1表示名称  2表示经验 3表示等级 4表示金币
	string UpdateTypeValue = 3;
	int64 UnitId = 4;
}

//道具[装备]更新
message M2C_RoleBagUpdate // IMessage
{
	repeated BagInfo BagInfoAdd = 1;
	repeated BagInfo BagInfoUpdate = 2;
	repeated BagInfo BagInfoDelete = 3;
}


//ResponseType M2C_BagInitResponse
message C2M_BagInitRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_BagInitResponse  // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	repeated BagInfo BagInfos = 1;
	repeated int32 QiangHuaLevel = 2;
	repeated int32 QiangHuaFails = 3;
	//int32 BagAddedCell = 4;
	repeated int32 WarehouseAddedCell = 5;
	repeated int32 FashionActiveIds = 6;
	repeated int32 FashionEquipList = 7;
	int32 SeasonJingHePlan = 8;
	repeated int32 AdditionalCellNum = 9;
}

//开启宝箱
//ResponseType M2C_OpenBoxResponse
message C2M_OpenBoxRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitId = 1;
}

message M2C_OpenBoxResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message DropInfo
{
	int64 UnitId  = 1;
	int32 ItemID = 3;
	int32 ItemNum = 4;
	float X = 5;
	float Y = 6;
	float Z = 7;
	int32 DropType = 8; //0 公共掉落    1私人掉落
	int32 CellIndex = 9;
	int64 BeKillId = 10;
}

//拾取道具
//ResponseType M2C_PickItemResponse
message C2M_PickItemRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	repeated DropInfo ItemIds = 1;
}

message M2C_PickItemResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated int64 RemoveIds = 1; //不存在的掉落
}

// 装备增幅
//ResponseType M2C_EquipmentIncreaseResponse
message C2M_EquipmentIncreaseRequest // ILocationRequest
{
	int32 RpcId = 90;
	BagInfo EquipmentBagInfo = 1; // 待增幅的装备 
	BagInfo ReelBagInfo = 2; // 所使用的卷轴 
}

message M2C_EquipmentIncreaseResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_FashionActiveResponse
message C2M_FashionActiveRequest  // ILocationRequest
{
	int32 RpcId = 90;
	int32 FashionId = 1;
}

message M2C_FashionActiveResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_FashionWearResponse
message C2M_FashionWearRequest  // ILocationRequest
{
	int32 RpcId = 90;
	int32 FashionId = 1;
	int32 OperatateType = 2;  //1穿戴 2卸下
}

message M2C_FashionWearResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_GemHeChengQuickResponse
//宝石一键合成
message C2M_GemHeChengQuickRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 LocType = 1;
}

message M2C_GemHeChengQuickResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_ItemBuyCellResponse
message C2M_ItemBuyCellRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateType = 1; //ItemLocType
}

message M2C_ItemBuyCellResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;

	//int32 BagAddedCell = 1;
	repeated int32 WarehouseAddedCell = 2;
	string GetItem = 3;
}

//销毁装备
//ResponseType M2C_ItemDestoryResponse
message C2M_ItemDestoryRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 OperateType = 1;
	int64 OperateBagID = 2;
}

message M2C_ItemDestoryResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_ItemEquipIndexResponse
//猎人穿戴装备特殊处理
message C2M_ItemEquipIndexRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 EquipIndex = 1;
}

message M2C_ItemEquipIndexResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//附魔属性
//ResponseType M2C_ItemFumoProResponse
message C2M_ItemFumoProRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 OperateType = 1;
	int32 Index = 2;
}

message M2C_ItemFumoProResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_ItemFumoUseResponse
//附魔使用
message C2M_ItemFumoUseRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 OperateType = 1;
	int64 OperateBagID = 2;
	repeated HideProList FuMoProList = 3;
}

message M2C_ItemFumoUseResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//回收装备
//ResponseType M2C_ItemHuiShouResponse
message C2M_ItemHuiShouRequest // ILocationRequest
{
	int32 RpcId = 90;
	repeated int64 OperateBagID = 2;
}

message M2C_ItemHuiShouResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//增幅转移
//ResponseType M2C_ItemIncreaseTransferResponse
message C2M_ItemIncreaseTransferRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 OperateBagID_1 = 1;
	int64 OperateBagID_2 = 2;
}

message M2C_ItemIncreaseTransferResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//装备传承
//ResponseType M2C_ItemInheritResponse
message C2M_ItemInheritRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 OperateBagID = 1;
}

message M2C_ItemInheritResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;

	repeated int32 InheritSkills = 2;
}

//传承确认
//ResponseType M2C_ItemInheritSelectResponse
message C2M_ItemInheritSelectRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 OperateBagID = 1;
	repeated int32 InheritSkills = 2;
}

message M2C_ItemInheritSelectResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//装备熔炼
//ResponseType M2C_ItemMeltingResponse
message C2M_ItemMeltingRequest // ILocationRequest
{
	int32 RpcId = 90;
	repeated int64 OperateBagID = 2;
	int32 MakeType = 3;
	int32 Plan = 4;
}

message M2C_ItemMeltingResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//一键盘出售
//ResponseType M2C_ItemOneSellResponse
message C2M_ItemOneSellRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateType = 1;				//操作类型 1
	repeated int64 BagInfoIds = 2;
}

message M2C_ItemOneSellResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_ItemOperateGemResponse
message C2M_ItemOperateGemRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateType = 1;				//操作类型 9 装备宝石 10卸下宝石
	int64 OperateBagID = 2;
	string OperatePar = 3;				// 类型参数[穿戴饰品需要传位置]
}

message M2C_ItemOperateGemResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	string OperatePar = 1;
}

//穿戴装备
//ResponseType M2C_ItemOperateResponse
message C2M_ItemOperateRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateType = 1;				//操作类型 1 背包使用  2 背包丢弃  3装备穿戴
	int64 OperateBagID = 2;
	string OperatePar = 3;				// 类型参数[穿戴饰品需要传位置]
}

message M2C_ItemOperateResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	string OperatePar = 1;
}

//猎人穿戴装备特殊处理
//ResponseType M2C_ItemOperateWearResponse
message C2M_ItemOperateWearRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateType = 1;				//操作类型  3装备穿戴  4
	int64 OperateBagID = 2;
	string OperatePar = 3;				// 类型参数[穿戴饰品需要传位置]
}

message M2C_ItemOperateWearResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	string OperatePar = 1;
}

//装备锁定
//ResponseType M2C_ItemProtectResponse
message C2M_ItemProtectRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 OperateBagID = 1;
	bool IsProtect = 2;
}

message M2C_ItemProtectResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//强化槽位
//ResponseType M2C_ItemQiangHuaResponse
message C2M_ItemQiangHuaRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 WeiZhi = 1;
}

message M2C_ItemQiangHuaResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	int32 QiangHuaLevel = 1;
}

//一键存放
//ResponseType M2C_ItemQuickPutResponse
message C2M_ItemQuickPutRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 HorseId = 1;
}

message M2C_ItemQuickPutResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//物品排序[通知服务器排序，暂时不需要返回]
message C2M_ItemSortRequest // ILocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

//ResponseType M2C_ItemSplitResponse
message C2M_ItemSplitRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateType = 1;
	int64 OperateBagID = 2;
	string OperatePar = 3;			//拆分数量
}

message M2C_ItemSplitResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	string OperatePar = 1;
}

//藏宝图开启
//ResponseType M2C_ItemTreasureOpenResponse
message C2M_ItemTreasureOpenRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateType = 1;
	int64 OperateBagID = 2;
	string OperatePar = 3;
}

message M2C_ItemTreasureOpenResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	string OperatePar = 1;
	RewardItem ReardItem = 5;
}

message SkillInfo
{
	int64 TargetID = 2;
	int32 TargetAngle = 3;
	int32 WeaponSkillID = 5;			//真实技能
	float PosX = 6;
	float PosY = 7;
	float PosZ = 8;
	int64 SkillBeginTime = 11;
	int64 SkillEndTime = 12;
	float SingValue = 13;
}

message M2C_UnitNumericListUpdate // IMessage
{
	int32 RpcId = 90;
	int64 UnitID  = 1;
	repeated int32 Ks = 2;
	repeated int64 Vs = 3;
}

//ResponseType M2C_UserInfoInitResponse
message C2M_UserInfoInitRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_UserInfoInitResponse  // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	UserInfo UserInfo = 1;
}

message FriendInfo
{
	int64 UserId = 1;
	int32 PlayerLevel = 2;
	string PlayerName = 3;
	int64 OnLineTime = 4;
	repeated string ChatMsgList = 5;	//离线聊天
	int32 Occ = 6;
}

//好友申请回复
//ResponseType F2C_FriendApplyReplyResponse
message C2F_FriendApplyReplyRequest // IFriendActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 UnitId = 1;
	int64 FriendID = 2;
	int32 ReplyCode = 3;
}

message F2C_FriendApplyReplyResponse // IFriendActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//黑名单
//ResponseType F2C_FriendBlacklistResponse
message C2F_FriendBlacklistRequest // IFriendActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int32 OperateType = 1;	//添加  2移除
	int64 UnitId = 2;
	int64 FriendId = 3;
}

message F2C_FriendBlacklistResponse // IFriendActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//好友申请
//ResponseType F2C_FriendApplyResponse
message C2F_FriendApplyRequest // IFriendActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitId = 2;
	FriendInfo FriendInfo = 1;
}

message F2C_FriendApplyResponse // IFriendActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType F2C_FriendChatRead
message C2F_FriendChatRead // IFriendActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitId = 1;
	int64 FriendID = 2;
}

message F2C_FriendChatRead // IFriendActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//好友删除
//ResponseType F2C_FriendDeleteResponse
message C2F_FriendDeleteRequest // IFriendActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 UnitId = 1;
	int64 FriendID = 2;
}

message F2C_FriendDeleteResponse // IFriendActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//好友列表
//ResponseType F2C_FriendInfoResponse
message C2F_FriendInfoRequest // IFriendActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 UnitId = 1;
}

message F2C_FriendInfoResponse // IFriendActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	repeated FriendInfo FriendList = 2;
	repeated FriendInfo ApplyList = 3;
	repeated FriendInfo Blacklist = 4;
	repeated ChatInfo FriendChats = 5;
}

message ItemXiLianResult
{
	repeated HideProList XiLianHideProLists = 1;
	repeated int32 HideSkillLists = 2;
	repeated HideProList XiLianHideTeShuProLists = 3;
}

message M2C_FashionUpdate // IMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitID = 1;
	repeated int32 FashionEquipList = 2;
}

//ResponseType M2C_SkillCmd
message C2M_SkillCmd // ILocationRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
    int32 SkillID = 1;
    int64 TargetID = 2;
    int32 TargetAngle = 3;
    float TargetDistance = 4;
    int32 WeaponSkillID = 5;
    int32 ItemId = 6;
	float SingValue = 7;
}

message M2C_SkillCmd // ILocationResponse
{

	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 CDEndTime = 1;
	int64 PublicCDTime = 2;
}

message M2C_UnitUseSkill // IMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 UnitId = 94;
	int32 SkillID = 1;				//表现用

	int32 TargetAngle = 3;				//用来角色转向
	repeated SkillInfo SkillInfos = 4;		//技能列表[一个技能可以同时触发多个技能]
	int32 ItemId = 6;
	int64 CDEndTime = 7;
	int64 PublicCDTime = 8;
}

message LifeShieldInfo
{
	int32 ShieldType = 1;
	int32 Level = 2;
	int32 Exp = 3;
	string Message = 4;
}

message SkillSetInfo
{
	repeated SkillPro SkillList = 1;
	repeated int32 TianFuList = 2;
	repeated LifeShieldInfo LifeShieldList = 3;
	repeated int32 TianFuList1 = 4;
	int32 TianFuPlan = 5;
}

//技能天赋更新
message M2C_SkillSetMessage	// IMessage
{
	SkillSetInfo SkillSetInfo = 1;
}

//ResponseType M2C_ChangeOccTwoResponse
//转换职业
message C2M_ChangeOccTwoRequest		// ILocationRequest
{
	int32 RpcId = 90;
	int32 OccTwoID = 1;
}

message M2C_ChangeOccTwoResponse	// ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType Chat2C_GetChatResponse
message C2Chat_GetChatRequest // IChatActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message Chat2C_GetChatResponse // IChatActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated ChatInfo ChatInfos = 1;
}

//ResponseType C2C_SendChatResponse
message C2C_SendChatRequest // IChatActorRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	
	ChatInfo ChatInfo = 1;
}

message C2C_SendChatResponse // IChatActorResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string ChatMsg = 1;
	int32 ChannelId = 2;	//0世界 1帮派 2队伍
}

message C2C_SyncChatInfo // IMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	
	ChatInfo ChatInfo = 1;
}

//成就进度
message ChengJiuInfo
{
	int32 ChengJiuID = 1;
	int32 ChengJiuProgess = 2;
	int64 ChengJiuProgessLong = 3;
}

//激活成就
message M2C_ChengJiuActiveMessage // IMessage
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 ChengJiuId = 1;
}

//任务列表
message TaskPro
{
    int32 taskID = 1;

    int32 taskTargetNum_1 = 2;
    int32 taskTargetNum_2 = 5;
    int32 taskTargetNum_3 = 6;
    int32 taskStatus = 3;	//0未激活 1已接取 2已完成 3已领取
    int32 TrackStatus = 4;	//0未追踪 1追踪
    int32 FubenId = 7;
    int32 WaveId = 8;
}

message M2C_TaskCountryUpdate // IMessage
{
	int32 RpcId = 90;
	int32 Error = 92;
	int64 ActorId = 93;
	
	int32 UpdateMode = 1;	//1增量更新   2全量更新
	repeated TaskPro TaskCountryList = 2;
}

message M2C_TaskUpdate // IMessage
{
	int32 RpcId = 90;
	int32 Error = 92;
	int64 ActorId = 93;
	
	repeated TaskPro RoleTaskList = 1;
	repeated TaskPro DayTaskList = 2;
}

//ResponseType M2C_TianFuActiveResponse
message C2M_TianFuActiveRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 TianFuId = 1;
}

message M2C_TianFuActiveResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_SkillSet
//技能设置
message C2M_SkillSet	// ILocationRequest
{
	int32 RpcId = 90;
	int32 SkillID = 1;
	int32 Position = 2;
	int32 SkillType = 3;
}

message M2C_SkillSet	// ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//提交任务
//ResponseType M2C_TaskCommitResponse
message C2M_TaskCommitRequest    // ILocationRequest
{
	int32 RpcId = 90;
	int32 TaskId = 1;
	int64 BagInfoID = 2;			//给予任务道具ID
}

message M2C_TaskCommitResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated int32 RoleComoleteTaskList = 1;
}

//提交任务
//ResponseType M2C_CommitTaskCountryResponse
message C2M_CommitTaskCountryRequest    // ILocationRequest
{
	int32 RpcId = 90;
	int32 TaskId = 1;
	int64 BagInfoID = 2;
}

message M2C_CommitTaskCountryResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//每日活跃
//ResponseType M2C_TaskCountryInitResponse
message C2M_TaskCountryInitRequest    // ILocationRequest
{
	int32 RpcId = 90;
}

message M2C_TaskCountryInitResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated TaskPro TaskCountryList = 1;
	repeated int32 ReceiveHuoYueIds = 2;
}

//接取任务
//ResponseType M2C_TaskGetResponse
message C2M_TaskGetRequest    // ILocationRequest
{
	int32 RpcId = 90;
	int32 TaskId = 1;
	int32 TaskStatus = 2; //0未激活 1已接取 2已完成 3已领取
}

message M2C_TaskGetResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	TaskPro TaskPro = 1;
}

//放弃任务
//ResponseType M2C_TaskGiveUpResponse
message C2M_TaskGiveUpRequest    // ILocationRequest
{
	int32 RpcId = 90;
	int32 TaskId = 1;
}

message M2C_TaskGiveUpResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//活跃宝箱
//ResponseType M2C_TaskHuoYueRewardResponse
message C2M_TaskHuoYueRewardRequest    // ILocationRequest
{
	int32 RpcId = 90;
	int32 HuoYueId = 1;
}

message M2C_TaskHuoYueRewardResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//任务列表
//ResponseType M2C_TaskInitResponse
message C2M_TaskInitRequest    // ILocationRequest
{
	int32 RpcId = 90;
}

message M2C_TaskInitResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated TaskPro RoleTaskList = 1;
	repeated int32 RoleComoleteTaskList = 2;
	repeated TaskPro TaskCountryList = 3;
	repeated int32 ReceiveHuoYueIds = 4;
}

//任务通知【目前用于对话完成】
//ResponseType M2C_TaskNoticeResponse
message C2M_TaskNoticeRequest    // ILocationRequest
{
	int32 RpcId = 90;
	int32 TaskId = 1;
	int32 TaskStatus = 2; //0未激活 1已接取 2已完成 3已领取
}

message M2C_TaskNoticeResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_TaskOnLoginResponse
message C2M_TaskOnLoginRequest // ILocationRequest
{
	int32 RpcId = 90;
}

message M2C_TaskOnLoginResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//任务追踪
//ResponseType M2C_TaskTrackResponse
message C2M_TaskTrackRequest	//ILocationRequest
{
	int32 RpcId = 90;
	int32 TaskId = 1;
	int32 TrackStatus = 2;	    //0未追踪 1已追踪
}

message M2C_TaskTrackResponse	//ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_SkillInitResponse
//技能升级
message C2M_SkillInitRequest	// ILocationRequest
{
	int32 RpcId = 90;
}

message M2C_SkillInitResponse	// ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	SkillSetInfo SkillSetInfo = 1;
}

//技能打断
message C2M_SkillInterruptRequest // ILocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 SkillID = 1;
}

message M2C_SkillInterruptResult // IMessage
{
	int64 ActorId = 93;
	int64 UnitId = 1;
	int32 SkillId = 2;
}

//ResponseType M2C_SkillJueXingResponse
message C2M_SkillJueXingRequest			// ILocationRequest
{
	int32 RpcId = 90;
	int32 JueXingId = 1;
}

message M2C_SkillJueXingResponse		// ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_SkillOperation
//技能操作
message C2M_SkillOperation	// ILocationRequest
{
	int32 RpcId = 90;
	int32 SkillID = 1;
	int32 OperationType = 3;	//1技能点重置
	string OperationValue = 4;
}

message M2C_SkillOperation	// ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}


//ResponseType M2C_SkillUp
//技能升级
message C2M_SkillUp	// ILocationRequest
{
	int32 RpcId = 90;
	int32 SkillID = 1;
}

message M2C_SkillUp	// ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	int32 NewSkillID = 1;
}

//ResponseType M2C_LifeShieldCostResponse
message C2M_LifeShieldCostRequest    // ILocationRequest
{
	int32 RpcId = 90;

	int32 OperateType = 1;
	repeated int64 OperateBagID = 2;
}

message M2C_LifeShieldCostResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	repeated LifeShieldInfo ShieldList = 1;
	int32 AddExp = 2;
}

//ResponseType M2C_TianFuPlanResponse
message C2M_TianFuPlanRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 TianFuPlan = 1;
}

message M2C_TianFuPlanResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//终止技能
message M2C_UnitFinishSkill // IMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitId = 1;
}


//ResponseType M2C_RoleAddPointResponse
message C2M_RoleAddPointRequest // ILocationRequest
{
	int32 RpcId = 90;
	repeated int32 PointList = 6;
}

message M2C_RoleAddPointResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

message M2C_UnitNumericUpdate // IMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitId = 94;
	int32 SkillId = 1;
	int32 NumericType = 2;
	int64 OldValue = 3;
	int64 NewValue = 4;
	int32 DamgeType = 5;
	int64 AttackId = 6;
}

message ShouJiChapterInfo
{
	int32 ChapterId = 1;
	int32 StarNum = 2;
	int32 RewardInfo = 3;
	repeated int32 ShouJiItemList = 4;
}

message JiaYuanRecord
{
	int64 Time = 1;
	string PlayerName = 2;
	int32 OperateType = 3;   //1进入家园 2收获植物 3收获动物  4清理 
	int32 OperateId = 4;
	int64 PlayerId = 7;        //玩家id
}

message JiaYuanOperate
{
	int64 Time = 1;
	string PlayerName = 2;
	int32 OperateType = 3;   //1进入家园 2收获植物 3收获动物  4清理 
	int32 OperateId = 4;
	string OperatePar = 5;
	int64 UnitId = 6;
	int64 PlayerId = 7;        //玩家id
}

message JiaYuanPurchaseItem
{
	int32 ItemID = 1;
	int32 BuyZiJin = 2;
	int64 MakeTime = 3;
	int32 LeftNum = 4;
	int32 PurchaseId = 5;
	int64 EndTime = 6;
}

message JiaYuanPlant
{
	int32 CellIndex = 1;
	int32 ItemId = 2;
	int64 StartTime = 3;
	int32 GatherNumber = 4;
	int64 GatherLastTime = 5;
	int64 UnitId = 6;
	int32 StealNumber = 7;
	repeated JiaYuanRecord GatherRecord = 8;
}

message JiaYuanPastures
{
	int32 ConfigId = 2;
	int64 StartTime = 3;
	int32 GatherNumber = 4;
	int64 GatherLastTime = 5;
	int64 UnitId = 6;
	int32 StealNumber = 7;
}


message JiaYuanMonster
{
	int64 unitId = 1;
	float x = 2;
	float y = 3;
	float z = 4;
	int64 BornTime = 5;
	int32 ConfigId = 6;
}

message JiaYuanPet
{
	int64 unitId = 1;
	int32 ConfigId = 2;
	int64 TotalExp = 3;
	int64 CurExp = 4;
	int64 StartTime = 5;
	int32 MoodValue = 6;
	int32 PetLv = 7;
	int64 LastExpTime = 8;
	string PlayerName = 9;
	string PetName = 10;
	int32 Position = 11;
}

//ResponseType M2C_RolePetList
message C2M_RolePetList // ILocationRequest
{
	int32 RpcId = 90;
}

message M2C_RolePetList // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	repeated RolePetInfo RolePetInfos = 1;
	repeated int64 TeamPetList = 2;
	repeated KeyValuePairInt RolePetEggs = 3;		//正在孵化的宠物蛋
	repeated int64 PetFormations = 4;
	repeated PetFubenInfo PetFubenInfos = 5;
	repeated KeyValuePair PetSkinList = 6;
	int32 PetFubeRewardId = 7; //已领取的奖励ID
	repeated int64 PetShouHuList = 8;		//宠物守护
	int32 PetShouHuActive = 9;
	repeated int32 PetCangKuOpen = 10;
	repeated int64 PetMingList = 11;
	repeated int64 PetMingPosition = 12;
	repeated RolePetInfo RolePetBag = 13;
}

//ResponseType M2C_RolePetFormationSet
//宠物出战设置
message C2M_RolePetFormationSet // ILocationRequest
{
	int32 RpcId = 90;
	int32 Index = 1;
	int64 PetId = 2;
	int32 OperateType = 3;// 1上阵  2替换  3下阵 

	int32 SceneType = 4;
	repeated int64 PetFormat = 5;
	repeated int64 PetPosition = 6;
}

message M2C_RolePetFormationSet // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_RolePetFight
//宠物出战[1出战 0休息]
message C2M_RolePetFight // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	int32 PetStatus = 2;
}

message M2C_RolePetFight // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_RolePetUpStar
//宠物合成
message C2M_RolePetUpStar // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	repeated int64 CostPetInfoIds = 2;
}

message M2C_RolePetUpStar  // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo rolePetInfo = 1;
	repeated int64 CostPetInfoIds = 2;
}

//ResponseType M2C_RolePetFenjie
//宠物分解
message C2M_RolePetFenjie // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
}

message M2C_RolePetFenjie // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_RolePetXiLian
//宠物洗练
message C2M_RolePetXiLian // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	int64 BagInfoID = 2;
	int32 CostItemNum = 3;
	string ParamInfo = 4;
}

message M2C_RolePetXiLian  // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo rolePetInfo = 1;
}

//ResponseType M2C_RolePetHeCheng
//宠物合成
message C2M_RolePetHeCheng // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId1 = 1;
	int64 PetInfoId2 = 2;
}
message M2C_RolePetHeCheng  // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo rolePetInfo = 1;
	int64 DeletePetInfoId = 2;
}

//ResponseType M2C_PetChangePosResponse 
message C2M_PetChangePosRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 Index1 = 1;
	int32 Index2 = 2;
}

message M2C_PetChangePosResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_PetDuiHuanResponse
message C2M_PetDuiHuanRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateId = 1;
}

message M2C_PetDuiHuanResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo RolePetInfo = 1;
}

//ResponseType M2C_PetEggChouKaResponse
message C2M_PetEggChouKaRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 ChouKaType = 1;

}

message M2C_PetEggChouKaResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	repeated RewardItem ReardList = 1;		//奖励列表
}

//ResponseType M2C_PetEggDuiHuanResponse
message C2M_PetEggDuiHuanRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 ChouKaId = 1;
}

message M2C_PetEggDuiHuanResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	repeated RewardItem ReardList = 1;
}

//ResponseType M2C_PetEquipResponse
//宠物装备
message C2M_PetEquipRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	int64 BagInfoId = 2;
	int32 OperateType = 4;   //1装备 2卸下
}

message M2C_PetEquipResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo RolePetInfo = 1;
}

//ResponseType M2C_PetExploreReward 
message C2M_PetExploreReward // ILocationRequest
{
	int32 RpcId = 90;
	int32 RewardId = 1;   //PetExploreReward.ley
}

message M2C_PetExploreReward // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_PetFragmentDuiHuan
message C2M_PetFragmentDuiHuan // ILocationRequest
{
	int32 RpcId = 90;
	int32 OperateId = 1;
}

message M2C_PetFragmentDuiHuan // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo RolePetInfo = 1;
}

//ResponseType M2C_PetFubenBeginResponse
//宠物副本开始战斗
message C2M_PetFubenBeginRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_PetFubenBeginResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//宠物副本结束战斗
message C2M_PetFubenOverRequest // ILocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

//ResponseType M2C_PetFubenRewardResponse
//宠物副本星级奖励
message C2M_PetFubenRewardRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_PetFubenRewardResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_PetHeXinChouKaResponse
message C2M_PetHeXinChouKaRequest // ILocationRequest
{
	int32 RpcId = 90;
	int32 ChouKaType = 1;
}

message M2C_PetHeXinChouKaResponse // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	repeated RewardItem ReardList = 1;		//奖励列表
}

//ResponseType M2C_PetHeXinExploreReward 
message C2M_PetHeXinExploreReward // ILocationRequest
{
	int32 RpcId = 90;
	int32 RewardId = 1;   //PetExploreReward.ley
}

message M2C_PetHeXinExploreReward // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_PetHeXinHeChengResponse
//宠物之核合成
message C2M_PetHeXinHeChengRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 BagInfoID_1 = 1;
	int64 BagInfoID_2 = 2;
}

message M2C_PetHeXinHeChengResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_PetHeXinHeChengQuickResponse
//宠物之核一键合成
message C2M_PetHeXinHeChengQuickRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_PetHeXinHeChengQuickResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_PetMingOccupyResponse
message C2M_PetMingOccupyRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 Operate = 1;  //0 放弃 1 占领
}

message M2C_PetMingOccupyResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_PetMingRecordResponse
message C2M_PetMingRecordRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_PetMingRecordResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated PetMingRecord PetMingRecords = 1;
}

//ResponseType M2C_PetMingResetResponse
message C2M_PetMingResetRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_PetMingResetResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_PetMingRewardResponse
message C2M_PetMingRewardRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 Number = 1;
}

message M2C_PetMingRewardResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_PetOpenCangKu
message C2M_PetOpenCangKu // ILocationRequest
{
	int32 RpcId = 90;
	int32 OpenIndex = 1;
}

message M2C_PetOpenCangKu // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_PetPutCangKu
message C2M_PetPutCangKu // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	int32 PetStatus = 2;
	int32 OpenIndex = 3;
}

message M2C_PetPutCangKu // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_PetShouHuActiveResponse
//宠物守护
message C2M_PetShouHuActiveRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 PetShouHuActive = 1;
}

message M2C_PetShouHuActiveResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 PetShouHuActive = 1;
}

//ResponseType M2C_PetShouHuResponse
//宠物守护
message C2M_PetShouHuRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 PetInfoId = 1;
	int32 Position = 2;
}

message M2C_PetShouHuResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated int64 PetShouHuList = 1;
}

//ResponseType M2C_PetTakeOutBag
message C2M_PetTakeOutBag // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
}

message M2C_PetTakeOutBag // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_PetTargetLockResponse
message C2M_PetTargetLockRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 TargetId = 1;
}

message M2C_PetTargetLockResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2C_RolePetEggHatch
//宠物蛋孵化
message C2M_RolePetEggHatch // ILocationRequest
{
	int32 RpcId = 90;
	int64 BagInfoId = 1;
	int32 Index = 2;
}

message M2C_RolePetEggHatch // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	KeyValuePairInt RolePetEgg = 1;
}


//ResponseType M2C_RolePetEggOpen
//宠物蛋开启【时间未到需要扣除钻石】
message C2M_RolePetEggOpen // ILocationRequest
{
	int32 RpcId = 90;
	int32 Index = 1;
}

message M2C_RolePetEggOpen // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo PetInfo = 1;
}

//ResponseType M2C_RolePetEggPutOut
//宠物蛋卸下
message C2M_RolePetEggPutOut // ILocationRequest
{
	int32 RpcId = 90;
	int32 Index = 2;
}

message M2C_RolePetEggPutOut // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	KeyValuePairInt RolePetEgg = 1;
}

//ResponseType M2C_RolePetHeXin
//更改宠物之核
message C2M_RolePetHeXin // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	int64 BagInfoId = 2;
	int32 Position = 3;
	int32 OperateType = 4;
}

message M2C_RolePetHeXin // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo RolePetInfo = 1;
}

//ResponseType M2C_RolePetJiadian
//宠物加点
message C2M_RolePetJiadian // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	repeated int32 AddPropretyValue = 2;
}

message M2C_RolePetJiadian  // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo RolePetInfo = 3;
}

//ResponseType M2C_RolePetProtect
message C2M_RolePetProtect // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	bool IsProtect = 2;
}

message M2C_RolePetProtect // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_RolePetRName
//宠物改名
message C2M_RolePetRName // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	string PetName = 2;
}

message M2C_RolePetRName // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_RolePetSkinSet
//更改宠物皮肤
message C2M_RolePetSkinSet // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	int32 SkinId = 2;
}

message M2C_RolePetSkinSet // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_RolePetUpStage
//宠物进化
message C2M_RolePetUpStage // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	int64 PetInfoXianJiId = 2;
}

message M2C_RolePetUpStage // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo OldPetInfo = 1;
	RolePetInfo NewPetInfo = 2;
}

//ResponseType M2C_RolePetXiuLian
//宠物修炼
message C2M_RolePetXiuLian // ILocationRequest
{
	int32 RpcId = 90;
	int64 PetInfoId = 1;
	int32 XiuLianId = 2;
}

message M2C_RolePetXiuLian  // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	RolePetInfo rolePetInfo = 1;
}

//ResponseType M2C_RolePetEggPut
//宠物蛋放入
message C2M_RolePetEggPut // ILocationRequest
{
	int32 RpcId = 90;
	int64 BagInfoId = 1;
	int32 Index = 2;
}

message M2C_RolePetEggPut // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	KeyValuePairInt RolePetEgg = 1;
}

message BattleSummonInfo
{
	int32 SummonId = 1;				//BattleSummonConfig
	int64 SummonTime = 2;				//最近一次召唤的时间戳
	int32 SummonNumber = 3;			//召唤次数
}

message M2C_FubenSettlement // IMessage
{
	int32 RpcId = 90;
	int32 Error = 92;
	int64 ActorId = 93;

	int32 BattleResult = 1;	// 0失败 1胜利
	int32 BattleGrade = 2;	//评级
	int32 RewardExp = 3;
	int32 RewardGold = 4;

	repeated RewardItem ReardList = 5;		//奖励列表
	repeated RewardItem ReardListExcess = 6;	//冒险家额外奖励

	repeated int32 StarInfos = 7;			//领主 时间 伤害
}

//家园刷新
message M2C_JiaYuanUpdate // IMessage
{
	repeated JiaYuanPurchaseItem PurchaseItemList = 2;
}

message M2C_FriendApplyResult	// IMessage
{
	FriendInfo FriendInfo = 1;
}

//ResponseType M2C_ChengJiuListResponse
message C2M_ChengJiuListRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_ChengJiuListResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated ChengJiuInfo ChengJiuProgessList = 1;
	repeated int32 ChengJiuCompleteList = 2;
	int32 TotalChengJiuPoint = 3;
	repeated int32 AlreadReceivedId = 4;
	repeated int32 JingLingList = 5;
	int32 JingLingId = 6;
	int32 RandomDrop = 7;
}

//ResponseType M2C_ChengJiuRewardResponse
message C2M_ChengJiuRewardRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 RewardId = 1;
}

message M2C_ChengJiuRewardResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//抓捕精灵
//ResponseType M2C_JingLingCatchResponse
message C2M_JingLingCatchRequest    // ILocationRequest
{
	int32 RpcId = 90;
	int64 JingLingId = 1;
	int32 ItemId = 2;
	string OperateType = 5;
}

message M2C_JingLingCatchResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//精灵掉落
//ResponseType M2C_JingLingDropResponse
message C2M_JingLingDropRequest    // ILocationRequest
{
	int32 RpcId = 90;
}

message M2C_JingLingDropResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//出战精灵
//ResponseType M2C_JingLingUseResponse
message C2M_JingLingUseRequest    // ILocationRequest
{
	int32 RpcId = 90;
	int32 JingLingId = 1;
	int32 OperateType = 2; //
}

message M2C_JingLingUseResponse    // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 JingLingId = 1;
}

message C2M_UnitStateUpdate // ILocationMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 StateType = 2;
	int32 StateOperateType = 3;
	int32 StateTime = 4;
	string StateValue = 5;
}

message M2C_UnitBuffUpdate // IMessage
{
	int32 BuffID = 1;
	int64 UnitIdBelongTo = 2;
	int32 BuffOperateType = 4;
	repeated float TargetPostion = 5;
	int64 BuffEndTime = 6;
	string Spellcaster = 7;
	int32 UnitType = 8;
	int32 UnitConfigId = 9;
	int32 SkillId = 10;
}

message M2C_UnitBuffRemove // IMessage
{
	int32 BuffID = 1;
	int64 UnitIdBelongTo = 2;
}

message M2C_UnitBuffStatus // IMessage
{
	int32 BuffID = 1;
	string FlyText = 2;
	int32 FlyType = 3;
	int64 UnitID = 4;
}

//二段技能
message M2C_SkillSecondResult // IMessage
{
	int64 ActorId = 93;
	int64 UnitId = 1;
	int32 SkillId = 2;
	repeated int64 HurtIds = 3;
}

message TokenRecvive
{
	int32 ActivityId = 1;
	int32 ReceiveIndex = 2;
}

//第一版的活动
message ActivityV1Info
{
	repeated int32 GuessIds = 1;			//竞猜的数值	
	repeated int32 LastGuessReward = 2;		//每日清空，中奖的时间段(0 ，14，18， 21)
	repeated int32 ConsumeDiamondReward = 3;	//消耗钻石领取记录
	repeated int32 ChouKaNumberReward = 4;		//抽卡次数奖励记录
	int32  ChouKaDropId = 5;   //当天掉落Id. 客户端显示奖励DropHelper.DropIDToShowItem()需要确认一下是否这个函数
	repeated int32 LiBaoAllIds = 6;		//所有每日礼包
	repeated int32 LiBaoBuyIds = 7;		//已购买每日礼包
	int32 BaoShiDu = 8;					//饱食度
	string ChouKa2ItemList = 9;				//抽卡2所有奖励列表 @切分
	repeated int32 ChouKa2RewardIds = 10;	//抽卡2已抽取奖励   达到一半可以刷新奖励
	repeated int32 OpenGuessIds = 11;       //竞猜开奖字
}

//闪电链
message M2C_ChainLightning // IMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 UnitId = 1;
	int64 TargetID = 2;
	int32 SkillID = 3;
	float PosX = 6;
	float PosY = 7;
	float PosZ = 8;
	int32 Type = 9;
	int64 InstanceId = 10;
}


//ResponseType M2C_StoreBuyResponse
//商店购买
message C2M_StoreBuyRequest		// ILocationRequest
{
	int32 RpcId = 90;
	int32 SellItemID = 1;
	int32 SellItemNum = 2;
}

message M2C_StoreBuyResponse	// ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
}

//ResponseType M2C_AccountWarehousInfoResponse
message C2M_AccountWarehousInfoRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 AccInfoID = 1;
}

message M2C_AccountWarehousInfoResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated BagInfo BagInfos = 1;
}

//ResponseType M2C_AccountWarehousOperateResponse
message C2M_AccountWarehousOperateRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 OperatateType = 2;    //1放入仓库  2取出仓库 3整理仓库 
	int64 OperateBagID = 3;
}

message M2C_AccountWarehousOperateResponse // ILocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	BagInfo BagInfo = 2;
}
