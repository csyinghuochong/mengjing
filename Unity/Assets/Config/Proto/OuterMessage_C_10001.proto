syntax = "proto3";
package ET;

message HttpGetRouterResponse
{
	repeated string Realms = 1;
	repeated string Routers = 2;
}

message RouterSync
{
	uint32 ConnectId = 1;
	string Address = 2;
}

//ResponseType M2C_TestResponse
message C2M_TestRequest // ILocationRequest
{
	int32 RpcId = 1;
	string request = 2;
}

message M2C_TestResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string response = 4;
}

//ResponseType G2C_EnterMap
message C2G_EnterMap // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_EnterMap // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	// 自己unitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated Unity.Mathematics.float3 Points = 1;
	Unity.Mathematics.quaternion Rotation = 2;
	int32 TurnSpeed = 3;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
	map<int32, int64> KV = 6;
	MoveInfo MoveInfo = 7;
}

message M2C_CreateUnits // IMessage
{
	repeated UnitInfo Units = 1;
}

message M2C_CreateMyUnit // IMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;	
}

message M2C_RemoveUnits // IMessage
{
	repeated int64 Units = 1;
}

message C2M_PathfindingResult // ILocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 Position = 2;
}

message C2M_Stop // ILocationMessage
{
	int32 RpcId = 1;
}

message M2C_PathfindingResult // IMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	repeated Unity.Mathematics.float3 Points = 3;
}

message M2C_Stop // IMessage
{
	int32 Error = 1;
	int64 Id = 2;
	Unity.Mathematics.float3 Position = 3;
	Unity.Mathematics.quaternion Rotation = 4;
}

//ResponseType G2C_Ping
message C2G_Ping // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Ping // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Time = 4;
}


message G2C_Test // ISessionMessage
{
}

//ResponseType M2C_Reload
message C2M_Reload // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Password = 3;
}

message M2C_Reload // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType R2C_Login
message C2R_Login // ISessionRequest
{
	int32 RpcId = 1;
	string  Account = 2;  // 帐号
	string  Password = 3;  // 密码
}

message R2C_Login // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
}

//ResponseType G2C_LoginGate
message C2G_LoginGate // ISessionRequest
{
	int32 RpcId = 1;
	int64 Key = 2;  // 帐号
	int64 GateId = 3;
}

message G2C_LoginGate // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
}

message G2C_TestHotfixMessage // ISessionMessage
{
	string Info = 1;
}

//ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // ILocationRequest
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 N = 4;
}

message C2M_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

//ResponseType M2C_TransferMap
message C2M_TransferMap // ILocationRequest
{
	int32 RpcId = 1;
}

message M2C_TransferMap // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2C_Benchmark
message C2G_Benchmark // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Benchmark // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

message HideProList
{
	int32 HideID = 1;
	int64 HideValue = 2;
}

message BagInfo
{
	int32 RpcId = 90;
	string Name = 91;
	int64 BagInfoID = 1;
	int32 ItemID = 2;
	int32 ItemNum = 3;
	string ItemPar = 4;
	int32 HideID = 5;
	string GemHole = 6;	//对应的孔位颜色
	int32 Loc = 8; //0背包 1装备
	bool IfJianDing = 9;
	repeated HideProList HideProLists = 10;					//鉴定属性
	repeated HideProList XiLianHideProLists = 11;           //洗练属性
	repeated int32 HideSkillLists = 12;
	bool isBinging = 13;
	repeated HideProList XiLianHideTeShuProLists = 14;		//洗练特殊属性
	string GetWay = 16; //来源方式
	string GemIDNew = 17;	//对应的宝石ID
	string MakePlayer = 18;					//制作玩家名字
	repeated HideProList FumoProLists = 20; //附魔属性
	int32 InheritTimes = 21;
	repeated int32 InheritSkills = 22;
	bool IsProtect = 23;						///装备锁 宠物锁 功能 npc打开
	repeated HideProList IncreaseProLists = 24; // 增幅属性
	repeated int32 IncreaseSkillLists = 25; // 增幅技能
	int32 EquipPlan = 26;
	int32 EquipIndex = 27; 
	int32 FuLing = 28;    //0未附灵 1附灵
}

//ResponseType M2C_BagInitResponse
message C2M_BagInitRequest // ILocationRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
}

message M2C_BagInitResponse  // ILocationResponse
{
	int32 RpcId = 90;
	string Message = 91;
	int32 Error = 92;
	repeated BagInfo BagInfos = 1;
	repeated int32 QiangHuaLevel = 2;
	repeated int32 QiangHuaFails = 3;
	//int32 BagAddedCell = 4;
	repeated int32 WarehouseAddedCell = 5;
	repeated int32 FashionActiveIds = 6;
	repeated int32 FashionEquipList = 7;
	int32 SeasonJingHePlan = 8;
	repeated int32 AdditionalCellNum = 9;
}
