syntax = "proto3";
// using 

package ET;

//ResponseType ObjectQueryResponse
message ObjectQueryRequest // IRequest
{
	int32 RpcId = 1;
	int64 Key = 2;
	int64 InstanceId = 3;
}

//ResponseType A2M_Reload
message M2A_Reload // IRequest
{
	int32 RpcId = 1;
}

message A2M_Reload // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2G_LockResponse
message G2G_LockRequest // IRequest
{
	int32 RpcId = 1;
	int64 Id = 2;
	string Address = 3;
}

message G2G_LockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2G_LockReleaseResponse
message G2G_LockReleaseRequest // IRequest
{
	int32 RpcId = 1;
	int64 Id = 2;
	string Address = 3;
}

message G2G_LockReleaseResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectAddResponse
message ObjectAddRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId ActorId = 4;
}

message ObjectAddResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectLockResponse
message ObjectLockRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId ActorId = 4;
	int32 Time = 5;
}
message ObjectLockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectUnLockResponse
message ObjectUnLockRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId OldActorId = 4;
	ActorId NewActorId = 5;
}
message ObjectUnLockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectRemoveResponse
message ObjectRemoveRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
}
message ObjectRemoveResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectGetResponse
message ObjectGetRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
}
message ObjectGetResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 Type = 4;
	ActorId ActorId = 5;
}

//ResponseType G2R_GetLoginKey
message R2G_GetLoginKey // IRequest
{
	int32 RpcId = 1;
	string Account = 2;
}

message G2R_GetLoginKey // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Key = 4;
	int64 GateId = 5;
}

message G2M_SessionDisconnect // ILocationMessage
{
	int32 RpcId = 1;
}

message ObjectQueryResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	bytes Entity = 4;
}

//ResponseType M2M_UnitTransferResponse
message M2M_UnitTransferRequest // IRequest
{
	int32 RpcId = 1;
	ActorId OldActorId = 2;
	bytes Unit = 3;
	repeated bytes Entitys = 4;
	int32 SceneType = 5;
	int32 SceneId = 6;
	int32 Difficulty = 7;
	string  ParamInfo = 8;
}

message M2M_UnitTransferResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//----------玩家缓存相关----------------
//增加或者更新Unit缓存
//ResponseType UnitCache2Other_AddOrUpdateUnit
message Other2UnitCache_AddOrUpdateUnit // IRequest
{
	 int32 RpcId = 90;

     int64 UnitId = 1;				  // 需要缓存的UnitId
     repeated string EntityTypes = 2;  //实体类型
     repeated bytes EntityBytes = 3;   //实体序列化后的bytes
}

message UnitCache2Other_AddOrUpdateUnit // IResponse
{
	int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
}

//获取Unit缓存
//ResponseType UnitCache2Other_GetUnit
message Other2UnitCache_GetUnit //IRequest
{
    int32 RpcId = 90;

    int64 UnitId = 1;
    repeated string ComponentNameList = 2; //需要获取的组件名
}

message UnitCache2Other_GetUnit //IResponse
{
    int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	repeated Entity EntityList = 1;
	repeated string ComponentNameList = 2;
}

//删除Unit缓存
//ResponseType UnitCache2Other_DeleteUnit
message Other2UnitCache_DeleteUnit // IRequest
{
   int32 RpcId = 90;

   int64 UnitId = 1;    
}

message UnitCache2Other_DeleteUnit // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
}

//ResponseType UnitCache2Other_GetComponent
message Other2UnitCache_GetComponent // IRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
	int64 UnitId = 1;
    string Component = 2;
}

message UnitCache2Other_GetComponent // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
    Entity Component = 1;
}

//----------玩家缓存相关----------------

//ResponseType Center2A_CheckAccount
message A2Center_CheckAccount // IRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
    string AccountName = 1;
    string Password = 2;
    string ThirdLogin = 4;
}

message Center2A_CheckAccount // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
    PlayerInfo PlayerInfo = 1;
    int64 AccountId = 2;
	bool IsHoliday = 3;
	bool StopServer = 4;
}

//ResponseType Center2A_RegisterAccount
message A2Center_RegisterAccount // IRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
    string AccountName = 1;
    string Password = 2;
	int32 LoginType = 3;
	int32 age_type = 4;
}

message Center2A_RegisterAccount // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
    int64 AccountId = 1;
}

//ResponseType L2A_LoginAccountResponse
message A2L_LoginAccountRequest // IRequest
{
	int32 RpcId = 90;
	int64 AccountId = 1;
	bool Relink = 5;
}

message L2A_LoginAccountResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType Chat2G_EnterChat
message G2Chat_EnterChat // IRequest
{
	int32 RpcId = 90;
	string Name = 1;
	int64 UnitId = 2;
	int64 GateSessionActorId = 3;
	int64 UnionId = 4;
}

message Chat2G_EnterChat // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 ChatInfoUnitInstanceId = 1;
}

//ResponseType Chat2G_RequestExitChat
message G2Chat_RequestExitChat // IRequest
{
	int32 RpcId = 90;
}

message Chat2G_RequestExitChat // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType R2M_RankUnionRaceResponse
message M2R_RankUnionRaceRequest // IRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
    int32 CampId = 1;
    RankShouLieInfo RankingInfo = 2;
}

message R2M_RankUnionRaceResponse // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
}

//ResponseType R2M_PetRankUpdateResponse
message M2R_PetRankUpdateRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 EnemyId = 1;
	RankPetInfo RankPetInfo = 2;
	int32 Win = 3;
}

message R2M_PetRankUpdateResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 SelfRank = 1;
}

//ResponseType A2M_PetMingBattleWinResponse
message M2A_PetMingBattleWinRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 MingType = 1;
	int32 Postion = 2;
	int64 UnitID = 3;
	int32 TeamId = 4;
	string WinPlayer = 5;
}

message A2M_PetMingBattleWinResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType A2M_PetMingPlayerInfoResponse
message M2A_PetMingPlayerInfoRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 MingType = 1;
	int32 Postion = 2;
}

message A2M_PetMingPlayerInfoResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	PetMingPlayerInfo PetMingPlayerInfo = 1;
}

//进入副本
//ResponseType LocalDungeon2M_EnterResponse
message M2LocalDungeon_EnterRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 UserID = 1;
	int32 SceneId = 2;
	int32 TransferId = 3;
	int32 Difficulty = 4;
	int32 SceneType = 5;
}

message LocalDungeon2M_EnterResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	
	int64 FubenId = 3;
	int64 FubenInstanceId = 4;
	int32 RootId = 5;
	int32 Process = 6;
}

//喂食物
//ResponseType A2M_ActivityFeedResponse
message M2A_ActivityFeedRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitID = 1;
}

message A2M_ActivityFeedResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 BaoShiDu = 1;
}

//ResponseType A2M_ActivityGuessResponse
message M2A_ActivityGuessRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitId = 1;
	int32 GuessId = 2;
}

message A2M_ActivityGuessResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType A2M_ActivitySelfInfo
message M2A_ActivitySelfInfo // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitId = 1;
}

message A2M_ActivitySelfInfo // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated int32 GuessIds = 1;
	repeated int32 LastGuessReward = 2;   //竞猜中奖纪录
	int32 BaoShiDu = 3;
	repeated int32 OpenGuessIds = 4;
}

message M2A_FirstWinInfoMessage // IMessage
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	FirstWinInfo FirstWinInfo = 1;
}

//ResponseType A2M_MysteryBuyResponse
message M2A_MysteryBuyRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	MysteryItemInfo MysteryItemInfo = 2;
}

message A2M_MysteryBuyResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType A2M_TurtleRecordResponse
message M2A_TurtleRecordRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 AccountId = 1;
}

message A2M_TurtleRecordResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int32 SupportId = 2;				//支持的id // ConfigHelper.TurtleList
	repeated int32 WinTimes = 3;		//胜利次数
	repeated int32  SupportTimes = 4;   //支持次数
}

//ResponseType A2M_TurtleReportResponse
message M2A_TurtleReportRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int32 TurtleId = 1;
}

message A2M_TurtleReportResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType A2M_TurtleSupportResponse
message M2A_TurtleSupportRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int32 SupportId = 1;
	int64 AccountId = 2;
	int64 UnitId = 3;
}

message A2M_TurtleSupportResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType A2M_ZhanQuInfoResponse
message M2A_ZhanQuInfoRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UserId = 1;
}

message A2M_ZhanQuInfoResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	repeated int32 DayTeHui = 1;
	repeated ZhanQuReceiveNumber ReceiveNum = 2;
}


//ResponseType A2M_ZhanQuReceiveResponse
message M2A_ZhanQuReceiveRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 ActivityType = 1;		//活动类型
	int32 ActivityId = 2;		//活动ID
	int64 UnitId = 3;
}

message A2M_ZhanQuReceiveResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType E2M_EMailSendResponse
message M2E_EMailSendRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 Id = 1;
	MailInfo MailInfo = 3;
	int32 GetWay = 4;
}

message E2M_EMailSendResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType M2A_PetMingRecordResponse
message A2M_PetMingRecordRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnitID = 3;

	PetMingRecord PetMingRecord = 1;
}

message M2A_PetMingRecordResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message Mail2M_SendServerMailItem // ILocationMessage
{
	int32 RpcId = 90;
	ServerMailItem ServerMailItem = 1;
}


//ResponseType A2A_ServerMessageRResponse
message A2A_ServerMessageRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 MessageType = 2;
	string MessageValue = 5;
}

message A2A_ServerMessageRResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}


//捐献
//ResponseType U2M_DonationResponse
message M2U_DonationRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	RankingInfo RankingInfo = 3;
}

message U2M_DonationResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int32 RankId = 1;
}

//ResponseType U2M_UnionCreateResponse
message M2U_UnionCreateRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	string UnionName = 1;
	string UnionPurpose = 2;	//公会宣言
	int64 UserID = 4;
}

message U2M_UnionCreateResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 UnionId = 1;
}

//ResponseType Chat2M_UpdateUnion
message M2Chat_UpdateUnion //IRequest
{
	int32 RpcId = 90;

	int64 UnitId = 2;
	int64 UnionId = 4;
}

message Chat2M_UpdateUnion //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//家族操作  1增加经验  2获取等级
//ResponseType U2M_UnionOperationResponse
message M2U_UnionOperationRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnionId = 1;
	int32 OperateType = 2;		//1 增加经验
	string Par = 3;				//1 2 3(自身金币数量)
	int64 UnitId = 4;
}

message U2M_UnionOperationResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string Par = 1;          //返回值
}

message M2U_UnionInviteReplyMessage // ILocationMessage
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 UnionId = 1;
	int32 ReplyCode = 2; //0拒绝 1同意
	int64 UnitID = 3;
}

//ResponseType U2M_UnionKeJiLearnResponse
message M2U_UnionKeJiLearnRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnionId = 1;
	int32 KeJiId = 2;
	int32 Position = 3;
}

message U2M_UnionKeJiLearnResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//离开公会
//ResponseType U2M_UnionLeaveResponse
message M2U_UnionLeaveRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnionId = 1;
	int64 UserId = 2;
}

message U2M_UnionLeaveResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType U2M_UnionMysteryBuyResponse
message M2U_UnionMysteryBuyRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnionId = 1;
	int32 MysteryId = 2;
	int32 BuyNumber = 3;
}

message U2M_UnionMysteryBuyResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//转让族长
//ResponseType U2M_UnionTransferResponse
message M2U_UnionTransferRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 NewLeader = 1;
	int64 UnitID = 2;
	int64 UnionId = 3;
}

message U2M_UnionTransferResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//入会通知
//ResponseType M2U_UnionApplyResponse
message U2M_UnionApplyRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UnionId = 1;
	string UnionName = 2;
}

message M2U_UnionApplyResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType G2T_GateUnitInfoResponse
message T2G_GateUnitInfoRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;

	int64 UserID = 1;
}

message G2T_GateUnitInfoResponse // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;

    int64 SessionInstanceId = 1;
    int32 PlayerState = 2;
    int64 UnitId = 3;
}

//加速完成
//ResponseType M2U_UnionKeJiQuickResponse
message U2M_UnionKeJiQuickRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 Cost = 1;
}

message M2U_UnionKeJiQuickResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//公会踢人
//ResponseType M2U_UnionKickOutResponse
message U2M_UnionKickOutRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 UserId = 1;
}

message M2U_UnionKickOutResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

///转让族长
message M2M_UnionTransferMessage // IMessage
{
	int32 RpcId = 90;
	int32 UnionLeader = 1;
}

//ResponseType Union2G_EnterUnion
message G2Union_EnterUnion //IRequest
{
	int32 RpcId = 90;
	string Name = 1;
	int64 UnitId = 2;
}

message Union2G_EnterUnion //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 WinUnionId = 2;
	int32 DonationRankId = 3;
	int64 LeaderId = 4;
}