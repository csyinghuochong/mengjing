syntax = "proto3";
// using 

package ET;

//ResponseType ObjectQueryResponse
message ObjectQueryRequest // IRequest
{
	int32 RpcId = 1;
	int64 Key = 2;
	int64 InstanceId = 3;
}

//ResponseType A2M_Reload
message M2A_Reload // IRequest
{
	int32 RpcId = 1;
}

message A2M_Reload // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2G_LockResponse
message G2G_LockRequest // IRequest
{
	int32 RpcId = 1;
	int64 Id = 2;
	string Address = 3;
}

message G2G_LockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType G2G_LockReleaseResponse
message G2G_LockReleaseRequest // IRequest
{
	int32 RpcId = 1;
	int64 Id = 2;
	string Address = 3;
}

message G2G_LockReleaseResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectAddResponse
message ObjectAddRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId ActorId = 4;
}

message ObjectAddResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectLockResponse
message ObjectLockRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId ActorId = 4;
	int32 Time = 5;
}
message ObjectLockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectUnLockResponse
message ObjectUnLockRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
	ActorId OldActorId = 4;
	ActorId NewActorId = 5;
}
message ObjectUnLockResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectRemoveResponse
message ObjectRemoveRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
}
message ObjectRemoveResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//ResponseType ObjectGetResponse
message ObjectGetRequest // IRequest
{
	int32 RpcId = 1;
	int32 Type = 2;
	int64 Key = 3;
}
message ObjectGetResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 Type = 4;
	ActorId ActorId = 5;
}

//ResponseType G2R_GetLoginKey
message R2G_GetLoginKey // IRequest
{
	int32 RpcId = 1;
	string Account = 2;
}

message G2R_GetLoginKey // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Key = 4;
	int64 GateId = 5;
}

message G2M_SessionDisconnect // ILocationMessage
{
	int32 RpcId = 1;
}

message ObjectQueryResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	bytes Entity = 4;
}

//ResponseType M2M_UnitTransferResponse
message M2M_UnitTransferRequest // IRequest
{
	int32 RpcId = 1;
	ActorId OldActorId = 2;
	bytes Unit = 3;
	repeated bytes Entitys = 4;
}

message M2M_UnitTransferResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

//----------玩家缓存相关----------------
//增加或者更新Unit缓存
//ResponseType UnitCache2Other_AddOrUpdateUnit
message Other2UnitCache_AddOrUpdateUnit // IRequest
{
	 int32 RpcId = 90;

     int64 UnitId = 1;				  // 需要缓存的UnitId
     repeated string EntityTypes = 2;  //实体类型
     repeated bytes EntityBytes = 3;   //实体序列化后的bytes
}

message UnitCache2Other_AddOrUpdateUnit // IResponse
{
	int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
}

//获取Unit缓存
//ResponseType UnitCache2Other_GetUnit
message Other2UnitCache_GetUnit //IRequest
{
    int32 RpcId = 90;

    int64 UnitId = 1;
    repeated string ComponentNameList = 2; //需要获取的组件名
}

message UnitCache2Other_GetUnit //IResponse
{
    int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	repeated Entity EntityList = 1;
	repeated string ComponentNameList = 2;
}

//删除Unit缓存
//ResponseType UnitCache2Other_DeleteUnit
message Other2UnitCache_DeleteUnit // IRequest
{
   int32 RpcId = 90;

   int64 UnitId = 1;    
}

message UnitCache2Other_DeleteUnit // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
}

//ResponseType UnitCache2Other_GetComponent
message Other2UnitCache_GetComponent // IRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
	int64 UnitId = 1;
    string Component = 2;
}

message UnitCache2Other_GetComponent // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
    Entity Component = 1;
}

//----------玩家缓存相关----------------

//ResponseType Center2A_CheckAccount
message A2Center_CheckAccount // IRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
    string AccountName = 1;
    string Password = 2;
    string ThirdLogin = 4;
}

message Center2A_CheckAccount // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
    PlayerInfo PlayerInfo = 1;
    int64 AccountId = 2;
	bool IsHoliday = 3;
	bool StopServer = 4;
}

//ResponseType Center2A_RegisterAccount
message A2Center_RegisterAccount // IRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
    string AccountName = 1;
    string Password = 2;
	int32 LoginType = 3;
	int32 age_type = 4;
}

message Center2A_RegisterAccount // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
    int64 AccountId = 1;
}

//ResponseType L2A_LoginAccountResponse
message A2L_LoginAccountRequest // IRequest
{
	int32 RpcId = 90;
	int64 AccountId = 1;
	bool Relink = 5;
}

message L2A_LoginAccountResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType Chat2G_EnterChat
message G2Chat_EnterChat // IRequest
{
	int32 RpcId = 90;
	string Name = 1;
	int64 UnitId = 2;
	int64 GateSessionActorId = 3;
	int64 UnionId = 4;
}

message Chat2G_EnterChat // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 ChatInfoUnitInstanceId = 1;
}

//ResponseType Chat2G_RequestExitChat
message G2Chat_RequestExitChat // IRequest
{
	int32 RpcId = 90;
}

message Chat2G_RequestExitChat // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType R2M_RankUnionRaceResponse
message M2R_RankUnionRaceRequest // IRequest
{
    int32 RpcId = 90;
    int64 ActorId = 93;
    int32 CampId = 1;
    RankShouLieInfo RankingInfo = 2;
}

message R2M_RankUnionRaceResponse // IResponse
{
    int32 RpcId = 90;
    int32 Error = 91;
    string Message = 92;
}

//ResponseType R2M_PetRankUpdateResponse
message M2R_PetRankUpdateRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int64 EnemyId = 1;
	RankPetInfo RankPetInfo = 2;
	int32 Win = 3;
}

message R2M_PetRankUpdateResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 SelfRank = 1;
}

//ResponseType A2M_PetMingBattleWinResponse
message M2A_PetMingBattleWinRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 MingType = 1;
	int32 Postion = 2;
	int64 UnitID = 3;
	int32 TeamId = 4;
	string WinPlayer = 5;
}

message A2M_PetMingBattleWinResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType A2M_PetMingPlayerInfoResponse
message M2A_PetMingPlayerInfoRequest // IRequest
{
	int32 RpcId = 90;
	int64 ActorId = 93;
	int32 MingType = 1;
	int32 Postion = 2;
}

message A2M_PetMingPlayerInfoResponse // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	PetMingPlayerInfo PetMingPlayerInfo = 1;
}